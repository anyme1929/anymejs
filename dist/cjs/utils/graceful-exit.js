"use strict";var e=require("@godaddy/terminus");module.exports=class{constructor(e){this.logger=e,this.isRegistered=!1,this.isShuttingDown=!1,this.cleanupTasks=new Set,this.healthCheck={},this.uncaughtException=async e=>{this.isShuttingDown||(this.isShuttingDown=!0,this.logger.error("⚠️ Uncaught Exception:",e),await this.cleanup())},this.unhandledRejection=async e=>{this.isShuttingDown||(this.isShuttingDown=!0,this.logger.error("⚠️ Unhandled Rejection:",e),await this.cleanup())}}register(s,t){if(this.isRegistered)return this;if(!s.listening)throw new Error("Server Not Listening");return this.isRegistered=!0,this.removeAllListener(),this.addCleanupTask(async()=>{this.logger.info("✅ container disposed")}),this.setupProcessHandlers(),e.createTerminus(s,{logger:(e,s)=>{s&&this.logger.error(e,s),e&&this.logger.info(e)},timeout:t?.timeout||3e4,signals:t?.signals||["SIGINT","SIGTERM"],healthChecks:this.healthCheck,onSignal:async()=>{this.isShuttingDown||(this.isShuttingDown=!0,this.logger.info("🚦 Received termination signal"),await this.cleanup())}}),this}addCleanupTask(...e){e.forEach(e=>this.cleanupTasks.add(e))}setHealthCheck(e){this.healthCheck=e}async cleanup(){0!==this.cleanupTasks.size&&(await Promise.all([...this.cleanupTasks].map(e=>e())),this.cleanupTasks.clear(),this.logger.info("✅ All resources closed").end())}setupProcessHandlers(){process.on("uncaughtException",this.uncaughtException),process.on("unhandledRejection",this.unhandledRejection)}removeAllListener(){["SIGINT","SIGTERM","uncaughtException","unhandledRejection"].forEach(e=>{process.listeners(e).forEach(s=>{s.name,process.removeListener(e,s)})})}};
//# sourceMappingURL=graceful-exit.js.map
