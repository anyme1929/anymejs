"use strict";var t=require("express-session");function e(t,e,s){if(s)return s(t,e);if(t)throw t;return e}class s extends t.Store{constructor(t){super(),this.prefix=null==t.prefix?"sess:":t.prefix,this.scanCount=t.scanCount||100,this.serializer=t.serializer||JSON,this.ttl=t.ttl||86400,this.disableTTL=t.disableTTL||!1,this.disableTouch=t.disableTouch||!1,this.client=t.client}async get(t,s){const i=this.prefix+t;try{const t=await this.client.get(i);return e(null,t?await this.serializer.parse(t):null,s)}catch(t){return e(t,null,s)}}async set(t,s,i){const n=this.prefix+t,l=this.getTTL(s);try{if(l>0){const t=this.serializer.stringify(s);return this.disableTTL?await this.client.set(n,t):await this.client.setex(n,l,t),e(null,null,i)}return this.destroy(t,i)}catch(t){return e(t,null,i)}}async touch(t,s,i){const n=this.prefix+t;if(this.disableTouch||this.disableTTL)return e(null,null,i);try{return await this.client.expire(n,this.getTTL(s)),e(null,null,i)}catch(t){return e(t,null,i)}}async destroy(t,s){const i=this.prefix+t;try{return await this.client.del(i),e(null,null,s)}catch(t){return e(t,null,s)}}async clear(t){try{const s=await this.getAllKeys();return s.length?(await this.client.del(s),e(null,null,t)):e(null,null,t)}catch(s){return e(s,null,t)}}async length(t){try{return e(null,(await this.getAllKeys()).length,t)}catch(s){return e(s,null,t)}}async ids(t){const s=this.prefix.length;try{return e(null,(await this.getAllKeys()).map(t=>t.substring(s)),t)}catch(s){return e(s,null,t)}}async all(t){const s=this.prefix.length;try{const i=await this.getAllKeys();if(0===i.length)return e(null,[],t);const n=await this.client.mget(i);return e(null,n.reduce((t,e,n)=>{if(!e)return t;const l=this.serializer.parse(e);return l.id=i[n].substring(s),t.push(l),t},[]),t)}catch(s){return e(s,null,t)}}getTTL(t){if("function"==typeof this.ttl)return this.ttl(t);let e;if(t?.cookie?.expires){const s=Number(new Date(t.cookie.expires))-Date.now();e=Math.ceil(s/1e3)}else e=this.ttl;return e}async getAllKeys(){const t=this.prefix+"*",e=new Set;let s="0";do{const[i,n]=await this.client.scan(s,"MATCH",t,"COUNT",this.scanCount);s=i,n.forEach(t=>e.add(t))}while("0"!==s);return e.size>0?Array.from(e):[]}}module.exports=s;
//# sourceMappingURL=session-ioredis.js.map
