"use strict";var e=require("./index.js");module.exports=class{constructor(){this.anonymous="<anonymous>",this.app=null,this.middlewareList=new Map}init(e){return this.app||(this.app=e),this}register(...e){this.validate(e),this.addBatch(this.formatHandlers(...e))}validate(s){if(e.isEmpty(s))throw new Error("Middleware handlers cannot be empty");if(!this.app)throw new Error("GlobalMiddlewares must be initialized with an Express app instance")}formatHandlers(...e){return e.map(e=>this.isIHandler(e)?e:{name:e.name||this.anonymous,handle:e})}isIHandler(e){return!(!e||"object"!=typeof e)&&("name"in e&&"handle"in e)}exists(e){return e.name!==this.anonymous&&(!(!this.middlewareList.has(e.name)&&!this.middlewareList.has(e.handle.name))&&e.name)}addBatch(e){const s=new Set,t=e.filter(e=>{const t=this.exists(e);return t?s.add(t):e.name===this.anonymous?this.setAnonymous(e.handle):this.middlewareList.set(e.name,e.handle),!t});if(s.size>0)throw new Error(`[${[...s].join(", ")}] middleware already registered`);t.length>0&&this.app.use(t.map(e=>e.handle))}setAnonymous(e){const s=this.middlewareList.get(this.anonymous);Array.isArray(s)?s.push(e):this.middlewareList.set(this.anonymous,[e])}get routers(){return this.middlewareList}};
//# sourceMappingURL=global-middlewares.js.map
